【開発するもの】
　ECサイト
　開発に集中していただくため、売るものや画像やデータ、デザインは準備されたものを使用する

【前提】
　本研修最終日に成果物発表会があります。
　上司や先輩など今後お世話になる方が見にこられます。
　研修を受けさせてもらった会社に感謝の気持ちを込めて成長した姿を見てもらいましょう。

【各ドキュメントの説明】
　　・1.HTMLモック
　　・2.ユースケース図
　　・3.ユースケース記述
　　・4.ドメインモデル
　　・5.クラス図(設計指針)
　　・6.テスト仕様書
　　・7.事前準備

【使用するツール】
　〇バージョン管理
　　GitHubを使用する
　　https://github.com
　　※コラボレータに講師も含めてください

　〇タスク管理
　　Trelloを使用する
　　https://trello.com
　　今回のステータス(リスト)
　　「未実施」「実装中」「テスト中」「改修中」「完了」
　　※メンバーに講師も含めてください

【チーム開発　1日の流れ】
    8:55 デイリースクラムリーダMTG
	9:00 デイリー・スクラム(朝会)
		各班のデイリースクラムリーダーが司会
		全員が立ちチームごとに
　　　　　「昨日行った作業」
　　　　　「本日行う作業」
　　　　　「障害となっていること」
　　　　　を一人ずつ簡潔に発表する
		時間は簡潔に5分以内とし、上記以外の話し合いは次のチームミーティングで行う
	9:10	チームミーティング
		リーダー、進捗管理リーダーが中心になり、チーム内の
		共有事項についてや進捗についての話し合いを行う
	9:30  チーム開発スタート！納期厳守！
		開発は何が起こるかわからないので、できる限り前倒しを心掛ける
	16:30	進捗管理MTG
		講師と進捗管理リーダーが集まり、その日の進捗を報告する
	16:45  各リーダーMTG
		その他、必要があれば講師と各リーダーがMTGを行い、情報を
		共有したり、懸念点の解消を行う

【各メンバーの役割】
　必ず一人が一つの役割を持つことで、受動的ではなく積極的にシステム開発に参加するようにします。
　役割は以下の通りです。
　　・総リーダー
　　　⇒全体の取りまとめ役。
　　　　毎日MTGでチームの雰囲気や状況を報告、必要であれば他の班のリーダーと相談し解決策を模索

　　・進捗管理リーダー
　　　⇒進捗管理MTG前にチームメンバーのその日の作業内容を確認。
　　　　毎日16時半から講師とMTGを行いにチームメンバーの進捗を講師へ報告
　　　　遅れが出ている場合は、リーダーと共にリカバリー策を考え講師に相談する
　　　　Redmine or Trelloが進んでいなければ指摘をする

　　　　今回、Trelloでは以下のステータス(リスト)を作成して管理してください。
　　　　「未実施」「実装中」「テスト中」「改修中」「完了」
　　　　
　　　　なお、進捗管理リーダーは
　　　　　・全ユースケースが●個あります。
　　　　　　未実施　：○個/●個中
　　　　　　実装中　：○個/●個中
　　　　　　テスト中：○個/●個中
　　　　　　改修中　：○個/●個中
　　　　　　完了　　：○個/●個中
　　　　というような報告をしてください。
　　　　なお、最初は基本機能のみ数える形で問題ありません。

　　・成果物リーダー
　　　⇒必要な成果物を責任を持って把握し、揃え、講師からレビューを受けたり提出をする。
　　　　発表会準備の中心となる。

　　・デイリースクラム(朝会)リーダー
　　　⇒デイリースクラム(朝会)の司会を行う
　　　　朝8:55になったら講師から連絡事項があるので確認し、
　　　　チームミーティングで全員に共有する

　　・技術リーダー
　　　⇒技術的に不明な点を調べたり他チームや講師に聞きに行く人、技術理解度は関係がない
　　　　デイリースクラムで同じ班に「障害となっていること」が挙がったら
　　　　即座に解決に向けて動く


【全体スケジュール】
　◎1日目：チーム役割決め、仕様把握、担当割り当て
　　〇チームを発表し、席替え後、役割を決める(約10分程度)
　
　　※役割が決まったら成果物リーダーは講師まで決まった役割をメールで送ってください
　　報告フォーマット
　　　総リーダー　　　：山田 太郎
　　　技術リーダー　　：〇〇 〇〇
　　　スクラムリーダー：〇〇 〇〇
　　　成果物リーダー　：〇〇 〇〇
　　　進捗管理リーダー：〇〇 〇〇

　　〇仕様確認
　　　・チームで仕様の確認を行う
　　　・画面モック、テーブル定義、ユースケース図、ユースケース記述などを確認し
　　　　自分担当の機能のみ仕様を把握するのではなく、全体の仕様を把握する

　　〇開発する担当割り当て
　　　・仕様確認後、誰がどの機能を作成するかを決定する
　
　　　注意点
　　　　・以前実装したことがある機能は他の人に譲ってサポートに回る
　　　　・基礎を強化したい人がいる場合は初級ユースケースを割り当てる
　　　　・割とできる人は、他チームとの差別化を測る追加機能をどんどん実装していく

　※終わり次第、次の日以降の作業を前倒しでどんどん進める

　◎2日目：詳細設計、開発環境準備
　　〇各担当毎に作業実施
　　　(1)ユースケース記述の再確認
　　　　自分担当のユースケース記述がない場合は講師に伝える
   　(2)テスト仕様書の作成
　　　　テスト仕様書を作成する
　　　　作成後、講師から解答例をもらい、抜けや漏れがあればそれを自分のテストケースに反映させる
　　　(3)クラス図(手書きorツール= draw.io or AmaterasUML)
　　　　チームごとに助け合いながら作成し、作成後、講師のレビューを受ける
　　　(4)見積もり(Redmine or Trello)
　　　　作成後、講師のレビューは特に必要がないが、自分で見積もった
　　　　時間と実際にかかった時間を必ず記録し、ずれていたら何が原因だった
　　　　のかを分析し、次に活かすこと(見積もりの制度を上げるのが目的)

　　　　Ticket First and No Ticket , No Work!
　　　　(機能実装や改修、バグフィックスなど、何か作業する際は
　　　　 必ずTrelloのカードを作ってから作業しましょうという意味)

　※終わり次第、次の日以降の作業を前倒しでどんどん進める

　◎3、4日目：実装、テスト
　　〇チーム毎に「事前準備.txt」の内容実施し開発環境を作る
　　〇チーム毎にリモートリポジトリを作成
　　〇各担当毎に実装
　　〇バグFix,品質改善,機能追加
　　〇テストの実施(今回は実装の強化を優先するためテストは任意とします)
　　　※講師から配布されたテスト仕様書を基にブラックボックステストを実施する
　　　　この際、テストケースに不備や追加があれば講師に連絡し修正をお願いします
　
　◎5、6日目：受入テスト＆指摘事項対応＆バグFix＆品質改善
　　〇テスト実施後、必ず講師による受入テストを受ける
　　　・コードレビューは今までたくさんやってきたため行わないが
　　　　読みやすいコードになっているかJavadocコメントはきちんと
　　　　書けているかをチーム内でチェックすること
　　・受入テストは、細かいところに気を遣えているかを中心に確認します。

　◎6日目：発表準備
　　〇発表会の準備
　　・パワーポイントを使って資料の作成
　　・練習を念入りに行うこと

　◎7日目：発表準備、発表
　　 9:00～　最後のデイリースクラム
　　 9:15～　チームミーティング
　　 9:40～　チーム毎に分かれて作業
 　　 　　　　品質改善、バグFix、発表準備(担当決め、順番決め)
　　10:00～　準備ができ次第、各班で発表練習を行う
　　 　　　　 ローカルで動いていても前に出ると動かなくなることが多々ある
　　　 　　　 ので入念な準備を！
　　12:00～　昼休み
　　13:00～　最終準備(発表PC、プロジェクタ準備、会場設営)
　　14:00～　最終成果発表会
　　　　　 　 各チーム毎に発表を行う
　　　　　　  必ず全員が自分が担当した機能についての説明をすること
　　　　　　  研修を受けさせてもらった会社、見に来てくださった方々へ
　　　　　　  感謝を込めて感動させましょう！

　　　(参考)個々人の発表時、説明することの例
　　　　・自分が作った機能
　　　　・工夫した点/苦労した点
　　　　・(今後の改善点)
　　　　ここでダラダラ説明してしまう人は顔合わせの結果が悪い傾向にある

【発表会スケジュール】
　 開式 14:30～14:40
 　Xチーム発表 14:40～15:05
　 Xチーム発表 15:10～15:35
　 Xチーム発表 15:35～16:00
　 総評 16:00～

【発表時間配分例】
　・システム概要説明(5分)
　　システムのコンセプト
　　チーム全体で工夫した点など

　・システム実演(5分)

　・個人の成果報告 2分×5名=(10分)
　　※実演しながらでも良い
　　・担当機能
　　・工夫した点、難しかった点
　　　セキュリティ考慮やJavaScriptを使った
　　　講義で習っていない技術を使用したなど
　　　※時間の関係上、2か月半の研修を受けての感想は割愛しましょう

　・質疑応答 5分

　※2時間ぎりぎりのため時間厳守、必ず発表は20分で終わらせるようにしてください

〇発表会後
　・最終成果物をGitbuckatへpushする
　・発表会資料を「プロジェクト名\documents」に入れる
　・担当箇所の仕様共有(クレジットカード決済やメール送信など、各自で行った技術内容を
　　チームメンバーに共有し、全員が理解できるような環境を作る
　・スペックシートの更新(育成担当から説明があります)
　※みなさんが作業している間、伊賀は育成担当と振り返りミーティングを行います
